# Generated by Django 3.2 on 2021-04-13 13:09

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields

from dependence.models import PatientAnamnesis


class Migration(migrations.Migration):

    initial = True

    operations = [
        migrations.CreateModel(
            name='PatientAnamnesis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nationality', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Nationalité')),
                ('spoken_languages', models.CharField(blank=True, default=None, max_length=40, null=True, verbose_name='Langues parlées')),
                ('external_doc_link', models.URLField(blank=True, default=None, null=True, verbose_name='URL doc. externe')),
                ('civil_status', models.CharField(blank=True, choices=[('SINGLE', 'Single'), ('MARRIED', 'Married'), ('WIDOW', 'Widow'), ('PACS', 'Pacs')], default=None, max_length=7, null=True, verbose_name='État civil')),
                ('preferred_drinks', models.TextField(blank=True, default=None, max_length=250, null=True, verbose_name='Boissons préfèrées')),
                ('shower_habits', models.TextField(blank=True, default=None, help_text='douche, lavé, bain', max_length=100, null=True, verbose_name='Se soigner')),
                ('dressing_habits', models.TextField(blank=True, default=None, help_text='Goûts vestimentaires', max_length=100, null=True, verbose_name='Habillements')),
                ('occupation_habits', models.TextField(blank=True, default=None, help_text='Profession, loisirs, sports, lecture, TV, musique, cinéma, sorties...', max_length=250, null=True, verbose_name='Occupations')),
                ('general_wishes', models.TextField(blank=True, default=None, max_length=250, null=True, verbose_name='Souhaits')),
                ('family_ties', models.TextField(blank=True, default=None, max_length=200, null=True, verbose_name='Famille')),
                ('friend_ties', models.TextField(blank=True, default=None, max_length=200, null=True, verbose_name='Amis')),
                ('important_persons_ties', models.TextField(blank=True, default=None, max_length=200, null=True, verbose_name='Personnes importantes')),
                ('bio_highlights', models.TextField(blank=True, default=None, help_text='Quelles sont les éléments marquants de votre vie, qui sont importants pour bien vous soigner ?', max_length=200, null=True, verbose_name='Important')),
                ('house_type', models.CharField(blank=True, choices=[('FLAT', 'Flat'), ('HOUSE', 'House')], default=None, max_length=5, null=True, verbose_name="Type d'habitation")),
                ('floor_number', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Étage')),
                ('ppl_circle', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Entourage')),
                ('door_key', models.BooleanField(blank=True, default=None, null=True, verbose_name='Clé')),
                ('entry_door', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name="Porte d'entrée")),
                ('preferred_pharmacies', models.TextField(blank=True, default=None, max_length=500, null=True, verbose_name='Pharmacie(s)')),
                ('preferred_hospital', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Établissement hospitalier choisi')),
                ('health_care_dossier_location', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Dossier de soins se trouve')),
                ('informal_caregiver', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Aidant informel')),
                ('pathologies', models.TextField(blank=True, default=None, max_length=500, null=True, verbose_name='Pathologies')),
                ('medical_background', models.TextField(blank=True, default=None, max_length=500, null=True, verbose_name='Antécédents')),
                ('allergies', models.TextField(blank=True, default=None, max_length=250, null=True, verbose_name='Allergies')),
                ('electrical_bed', models.BooleanField(blank=True, default=None, null=True, verbose_name='Lit électrique')),
                ('walking_frame', models.BooleanField(blank=True, default=None, null=True, verbose_name='Cadre de marche')),
                ('cane', models.BooleanField(blank=True, default=None, null=True, verbose_name='Canne')),
                ('aqualift', models.BooleanField(blank=True, default=None, null=True, verbose_name='Aqualift')),
                ('remote_alarm', models.CharField(blank=True, choices=[('RK', 'Roude Knap'), ('SDHM', 'Secher Doheem'), ('HLP', 'Help')], default=None, max_length=4, null=True, verbose_name='Alarme')),
                ('other_technical_help', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Autres aides techniques')),
                ('dental_prosthesis', models.CharField(blank=True, choices=[('HI', 'High'), ('LO', 'Low'), ('CMPLT', 'Complete')], default=None, max_length=5, null=True, verbose_name='Prothèses dentaires')),
                ('hearing_aid', models.CharField(blank=True, choices=[('RIT', 'Right'), ('LFT', 'Left'), ('BTH', 'Both')], default=None, max_length=4, null=True, verbose_name='Appareil auditif')),
                ('glasses', models.BooleanField(blank=True, default=None, null=True, verbose_name='Lunettes')),
                ('other_prosthesis', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Autres')),
                ('drugs_managed_by', models.CharField(blank=True, choices=[('AUTNM', 'Autonomous'), ('FML', 'Family'), ('NTWRK', 'Network')], default=None, max_length=5, null=True, verbose_name='Prise en charge')),
                ('drugs_prepared_by', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Prépraration')),
                ('drugs_distribution', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Distribution')),
                ('drugs_ordering', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Commande des médicaments')),
                ('pharmacy_visits', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Passages en pharmacie')),
                ('mobilization', models.CharField(blank=True, choices=[('AUTNM', 'Autonomous'), ('TCNQ', 'With technical help'), ('TRD', 'With third party'), ('BD', 'Bedridden')], default=None, max_length=5, null=True, verbose_name='Mobilisation')),
                ('mobilization_description', models.TextField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('hygiene_care_location', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Les soins se déroulent où?')),
                ('shower_days', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Jours de douche')),
                ('hair_wash_days', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Lavage cheveux')),
                ('bed_manager', models.CharField(blank=True, choices=[('AUTNM', 'Autonomous'), ('FML', 'Family'), ('NTWRK', 'Network')], default=None, max_length=5, null=True, verbose_name='Le lit est à faire par')),
                ('bed_sheets_manager', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Changement des draps')),
                ('laundry_manager', models.CharField(blank=True, choices=[('AUTNM', 'Autonomous'), ('FML', 'Family'), ('NTWRK', 'Network')], default=None, max_length=5, null=True, verbose_name='Linge est à faire par')),
                ('laundry_drop_location', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Le linge sale est à déposer où ?')),
                ('new_laundry_location', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Les vêtements/serviettes etc. se trouvent où ?')),
                ('weight', models.PositiveSmallIntegerField(default=None, verbose_name='Poids')),
                ('size', models.PositiveSmallIntegerField(default=None, verbose_name='Taille en cm.')),
                ('nutrition_autonomy', models.CharField(blank=True, choices=[('AUTNM', 'Autonomous'), ('FML', 'Family'), ('NTWRK', 'Network'), ('TB', 'Tube')], default=None, max_length=5, null=True, verbose_name='Sonde PEG')),
                ('diet', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Régime')),
                ('meal_on_wheels', models.BooleanField(blank=True, default=None, null=True, verbose_name='Repas sur roues')),
                ('shopping_management', models.CharField(blank=True, choices=[('AUTNM', 'Autonomous'), ('FML', 'Family'), ('NTWRK', 'Network')], default=None, max_length=5, null=True, verbose_name='Commissions à faire par')),
                ('shopping_management_desc', models.TextField(blank=True, default=None, max_length=250, null=True, verbose_name='Description')),
                ('urinary_incontinence', models.BooleanField(blank=True, default=None, null=True, verbose_name='Incontinence urinaire')),
                ('faecal_incontinence', models.BooleanField(blank=True, default=None, null=True, verbose_name='Incontinence fécale')),
                ('protection', models.BooleanField(blank=True, default=None, null=True, verbose_name='Protection')),
                ('day_protection', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Protection Pendant la journée')),
                ('night_protection', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Protection Pendant la nuit')),
                ('protection_ordered', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Protection à commander par')),
                ('urinary_catheter', models.BooleanField(blank=True, default=None, null=True, verbose_name='Sonde urinaire')),
                ('crystofix_catheter', models.BooleanField(blank=True, default=None, null=True, verbose_name='Crystofix')),
                ('elimination_addnl_details', models.TextField(blank=True, default=None, max_length=500, null=True, verbose_name='Autres détails ou remarques')),
                ('day_care_center', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Foyer de jour')),
                ('day_care_center_activities', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Activités')),
                ('household_chores', models.BooleanField(blank=True, default=None, null=True, verbose_name='Tâches domestiques')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='anamnesis_to_patient', to='invoices.patient')),
            ],
            options={
                'verbose_name': 'Anamnèse Patient',
                'verbose_name_plural': 'Anamnèses Patient',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='OtherStakeholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(max_length=50, verbose_name='Nom et prénom')),
                ('contact_pro_spec', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Spécialité')),
                ('contact_private_phone_nbr', models.CharField(max_length=30, verbose_name='Tél. privé')),
                ('contact_business_phone_nbr', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Tél. bureau')),
                ('contact_email', models.EmailField(blank=True, default=None, max_length=30, null=True, verbose_name='Email')),
                ('stakeholder_anamnesis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stakeholder_to_anamnesis', to='dependence.patientanamnesis')),
            ],
            options={
                'verbose_name': 'Autre intervenant',
                'verbose_name_plural': 'Autres intervenants',
            },
        ),
        migrations.CreateModel(
            name='DependenceInsurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_date', models.DateField(default=None, verbose_name='Date évaluation')),
                ('ack_receipt_date', models.DateField(blank=True, default=None, null=True, verbose_name='Accusè de réception')),
                ('decision_date', models.DateField(blank=True, default=None, null=True, verbose_name='Date de la décision')),
                ('rate_granted', models.CharField(blank=True, choices=[('REF', 'Refused'), ('ZRO', '0'), ('ONE', '1'), ('TWO', '2'), ('TRE', '3'), ('FOR', '4'), ('FVE', '5'), ('SIX', '6'), ('SVN', '7'), ('EGT', '8'), ('NIN', '9'), ('TEN', '10'), ('ELV', '11'), ('TWV', '12')], default=None, max_length=3, null=True, verbose_name='Forfait')),
                ('dep_anamnesis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dep_ins_to_anamnesis', to='dependence.patientanamnesis')),
            ],
            options={
                'verbose_name': 'Décision Assurance dépendance',
                'verbose_name_plural': 'Décisions Assurance dépendance',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Priorité')),
                ('contact_name', models.CharField(max_length=50, verbose_name='Nom')),
                ('contact_relationship', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Relation')),
                ('contact_private_phone_nbr', models.CharField(max_length=30, verbose_name='Tél. privé')),
                ('contact_business_phone_nbr', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Tél. bureau')),
                ('patient_anamnesis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contactpers_to_anamnesis', to='dependence.patientanamnesis')),
            ],
            options={
                'verbose_name': 'Personne de contact',
                'verbose_name_plural': 'Personnes de contact',
            },
        ),
        migrations.CreateModel(
            name='BiographyHabits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('habit_type', models.CharField(blank=True, choices=[('MORNING', 'Levé'), ('SLEEP', 'Coucher'), ('BRK_FST', 'Petit Déjeuner'), ('LNCH', 'Déjeuner'), ('DNR', 'Diner')], default=None, max_length=7, null=True, verbose_name='Type')),
                ('habit_time', models.TimeField(verbose_name='Heure')),
                ('habit_ritual', models.CharField(max_length=50, verbose_name='Rite')),
                ('habit_preferences', models.CharField(max_length=50, verbose_name='Préférences')),
                ('biography', models.ForeignKey(blank=True, default=None, help_text='Veuillez saisir les habitudes du bénéficiaire', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='habit_patient_biography', to='dependence.patientanamnesis')),
            ],
            options={
                'verbose_name': 'Habitudes',
                'verbose_name_plural': 'Habitudes',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AssignedPhysician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anamnesis', models.ForeignKey(blank=True, default=None, help_text='Please enter hospitalization dates of the patient', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='patient_anamnesis', to='dependence.patientanamnesis')),
                ('assigned_physician', models.ForeignKey(blank=True, default=None, help_text='Please enter physician of the patient', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assigned_physicians', to='invoices.physician', verbose_name='Médecin')),
            ],
            options={
                'verbose_name': 'Médecin Traitant',
                'verbose_name_plural': 'Médecins Traitants',
            },
        ),

    ]
