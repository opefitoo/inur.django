# Generated by Django 4.1.4 on 2022-12-18 11:17

import dependence.falldeclaration
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import invoices.db.fields
import invoices.middleware


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("dependence", "0027_yale_door_setup"),
    ]

    operations = [
        migrations.CreateModel(
            name="FallDeclaration",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datetimeOfFall",
                    models.DateTimeField(verbose_name="Date, time of fall"),
                ),
                (
                    "placeOfFall",
                    models.CharField(max_length=200, verbose_name="Place of fall"),
                ),
                (
                    "file_upload",
                    models.FileField(
                        blank=True,
                        help_text="You can attach the scan of the declaration",
                        null=True,
                        upload_to=dependence.falldeclaration.update_fall_declaration_filename,
                        validators=[dependence.falldeclaration.validate_file],
                        verbose_name="Attached file",
                    ),
                ),
                (
                    "witnesses",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Possible witnesses",
                    ),
                ),
                (
                    "fall_circumstance",
                    models.CharField(
                        choices=[
                            (
                                "FCI_ON_SAME_LEVEL",
                                "Fall on the same level as a result of slipping, stumbling and tripping",
                            ),
                            ("FCI_FROM_BED", "Fall from a bed"),
                            ("FCI_FROM_CHAIR", "Fall from a chair"),
                            ("FCI_FROM_STAIRS", "Fall down stairs and steps"),
                            (
                                "FCI_WHILE_HELD",
                                "Fall while being carried or supported by a third party",
                            ),
                            ("FCI_FROM_WHEELC", "Fall from a wheelchair"),
                            ("FCI_FROM_TOILET", "Fall from a toilet seat"),
                            ("FCI_OTHER_CAUSES", "Other"),
                        ],
                        max_length=255,
                        verbose_name="Circumstances of the fall",
                    ),
                ),
                (
                    "other_fall_circumstance",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Other circumstances of the fall",
                    ),
                ),
                (
                    "incident_circumstance",
                    models.TextField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Circumstances of the incident",
                    ),
                ),
                (
                    "fall_consequences",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Consequences of the fall",
                    ),
                ),
                (
                    "other_fall_consequence",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Other consequence of the fall",
                    ),
                ),
                (
                    "fall_required_medical_acts",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Medical and/or nursing acts required within 24 hoursonsequences of the fall",
                    ),
                ),
                (
                    "other_required_medical_act",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Other medical and/or nursing acts required within 24 hours",
                    ),
                ),
                (
                    "medications_risk_factor",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "FMRF_MEDS",
                                "Medicines (psychotropics, anti-hypertensives, polypragmasia etc.)",
                            ),
                            ("FMRF_OTHER", "Others: > 4 drugs"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Risk factors",
                    ),
                ),
                (
                    "fall_cognitive_mood_diorders",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Cognitive and/or mood disorders",
                    ),
                ),
                (
                    "fall_incontinences",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Incontinence",
                    ),
                ),
                (
                    "mobility_disability",
                    models.CharField(
                        choices=[
                            (
                                "FCMD_NONE",
                                "Moves alone, without difficulty, without auxiliary means",
                            ),
                            (
                                "FMD_DIFFICULTY",
                                "Moves independently with difficulty with or without aids",
                            ),
                            (
                                "FMD_ACCOMPANIED",
                                "Moves accompanied without auxiliary means",
                            ),
                            ("FMD_AUXILIARY", "Moves accompanied with auxiliary means"),
                        ],
                        max_length=255,
                        verbose_name="Mobility Disability",
                    ),
                ),
                (
                    "unsuitable_footwear",
                    models.BooleanField(
                        default=False, verbose_name="Unsuitable footwear"
                    ),
                ),
                (
                    "other_contributing_factor",
                    models.TextField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Other contributing factor",
                    ),
                ),
                (
                    "preventable_fall",
                    models.BooleanField(
                        verbose_name="The fall could have been prevented"
                    ),
                ),
                (
                    "physician_informed",
                    models.BooleanField(verbose_name="The doctor was notified"),
                ),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created on"),
                ),
                (
                    "updated_on",
                    models.DateTimeField(auto_now=True, verbose_name="Last update"),
                ),
                (
                    "declared_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        limit_choices_to=models.Q(
                            ("abbreviation__in", ["XXX"]), _negated=True
                        ),
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="edeclaring_employee",
                        to="invoices.employee",
                        verbose_name="Declared by",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        help_text="Only looks for patients covered by long-term care insurance, check that the checkbox is validated if you cannot find your patient",
                        limit_choices_to={"is_under_dependence_insurance": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="falldeclaration_to_patient",
                        to="invoices.patient",
                    ),
                ),
                (
                    "user",
                    invoices.db.fields.CurrentUserField(
                        default=invoices.middleware.get_current_authenticated_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fall Declaration",
                "verbose_name_plural": "Fall Declarations",
                "ordering": ["patient__id"],
            },
        ),
    ]
